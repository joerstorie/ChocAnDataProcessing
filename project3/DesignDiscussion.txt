Our design exhibits strong cohesion by separating all necessary elements of the functionality of the program into individual components whose methods each contribute directly to the component’s purpose. Class variables are kept private so as to maintain the separation of work done by each component. Each of the classes has a defined and unique purpose, and their functionality persists regardless of changes made to the functionality of related components. In creating separate classes for each type of report, we have designed the process such that the “Report Controller” class must only create one of each type of report class instead of iteratively generating four different reports separately within the function. This means that these report classes can now be called in any number of ways, including being generated by a timer or a manager’s request. Thus, the “Report Controller” class is much more cohesive in that it can focus solely on receiving stimuli and responding accordingly.
